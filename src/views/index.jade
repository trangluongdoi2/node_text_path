doctype html
html
  head
    title SVG Text
    style.
      .container {
        display: flex;
        column-gap: 10px;
      }
      .form-wrapper {
        width: 100%;
        height: 200px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        row-gap: 10px;
      }
      #form-input {
        width: 100%;
        height: 100%;
        vertical-align: bottom !important;
        border: 1px solid red;
        font-size: 36px;
      }
      #btn {
        width: 100%;
        height: 100px;
        font-size: 36px;
      }
  body
    form.form-wrapper
      input#form-input(type='text' oninput='updateURL')
      button#btn(type='submit') Load Pure Content
    h1 Demo Render Text Path
    .container
      #svg-pure
        != input
      #svg-result
        != output
    script.
      var url = 'https://dev.korjl.com/output/org/GD01HHDZSMZQ57K00R3XXZ50CCT6/downloads/DC01JFYD03VV2PTBTPPR1B6CWM0K/U01JFYD50ZP880DQSED5HNB8FGR/html/3.html';
      let content = '';
      function getPureSVG(url) {
        return new Promise((resolve, reject) => {
          fetch(url)
            .then(res => res.text())
            .then(html => {
              console.log(html, '==> html...');
              //- const parser = new DOMParser();
              //- const doc = parser.parseFromString(html, 'text/html');
              //- const element = doc.querySelector('.svg-main-canvas.ready');
              //- const div = doc.getElementById('svg-pure');
              //- console.log(element, '==> element...');
              resolve('doc');
            })
            .catch(error => resolve(undefined))
        //-  fetch('aa')
        //-   .then(res => res.arrayBuffer())
        //-   .then(buffer => {
        //-     const decoder = new TextDecoder('utf-8');
        //-     const html = decoder.decode(buffer);
        //-     const parser = new DOMParser();
        //-     const doc = parser.parseFromString(html, 'text/html');
        //-     console.log(doc, '==> doc...');
        //-     resolve(doc);
        //-   });
        })
      }

      function updateURL(e) {
        url = e.target.value;
      }

      async function loadContent(e) {
        e.preventDefault();
        content = await getPureSVG(url);
        console.log(content, '==> content...');
        const serverURL = 'http://localhost:3000/api/post-html';
        const headers = {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        };
        //- fetch(serverURL, {
        //-   method: 'POST',
        //-   headers,
        //-   body: JSON.stringify({ data: content })
        //- })
      }

      // DOM EVENT
      const inputEl = document.getElementById('form-input');
      inputEl.value = url;
      const btn = document.getElementById('btn');
      btn.addEventListener('click', loadContent);
      inputEl.addEventListener('input', updateURL);